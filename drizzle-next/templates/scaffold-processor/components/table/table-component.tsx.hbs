import { EllipsisIcon, EyeIcon, PencilIcon, TrashIcon } from "lucide-react";
import Link from "next/link";
import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from "@/components/ui/table";
import { Button } from "@/components/ui/button";
import { Sortable } from "@/components/sortable";
import { {{tableObj.pluralPascalCase}}WithRelationsList } from "@/repositories/{{tableObj.singularKebabCase}}-repository";
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu";

export function {{tableObj.singularPascalCase}}Table({ {{tableObj.singularCamelCase}}List }: { {{tableObj.singularCamelCase}}List: {{tableObj.pluralPascalCase}}WithRelationsList }) {
  return (
    <Table>
      <TableHeader className="bg-background">
        <TableRow>
          <TableHead><Sortable column="id">Id</Sortable></TableHead>
          {{#each validatedColumns}}
            {{#switch this.dataType}}
              {{#case "references"}}
          <TableHead><Sortable column="{{this.caseVariants.originalCamelCase}}">{{this.caseVariants.originalCapitalCase}}</Sortable></TableHead>
              {{/case}}
              {{#case "references_select"}}
          <TableHead><Sortable column="{{this.caseVariants.originalCamelCase}}">{{this.caseVariants.originalCapitalCase}}</Sortable></TableHead>
              {{/case}}
              {{#default}}
          <TableHead><Sortable column="{{this.caseVariants.originalCamelCase}}">{{this.caseVariants.originalCapitalCase}}</Sortable></TableHead>
              {{/default}}
            {{/switch}}
          {{/each}}
          <TableHead className="sticky right-0"></TableHead>
        </TableRow>
      </TableHeader>
      <TableBody>
        { {{tableObj.singularCamelCase}}List.map(({{tableObj.singularCamelCase}}Obj) => (
          <TableRow key={ {{tableObj.singularCamelCase}}Obj.id }>
            <TableCell>{ {{tableObj.singularCamelCase}}Obj.id }</TableCell>
            {{#each validatedColumns}}
              {{#switch this.dataType}}
                {{#case "boolean"}}
            <TableCell>{ {{../tableObj.singularCamelCase}}Obj.{{this.caseVariants.originalCamelCase}} ? "true" : "false" }</TableCell>
                {{/case}}
                {{#case "date"}}
            <TableCell>{ {{../tableObj.singularCamelCase}}Obj.{{this.caseVariants.originalCamelCase}}?.toLocaleDateString() }</TableCell>
                {{/case}}
                {{#case "datetime"}}
            <TableCell>{ {{../tableObj.singularCamelCase}}Obj.{{this.caseVariants.originalCamelCase}}?.toLocaleString() }</TableCell>
                {{/case}}
                {{#case "timestamp"}}
            <TableCell>{ {{../tableObj.singularCamelCase}}Obj.{{this.caseVariants.originalCamelCase}}?.toLocaleString() }</TableCell>
                {{/case}}
                {{#case "json"}}
            <TableCell>{ JSON.stringify({{../tableObj.singularCamelCase}}Obj.{{this.caseVariants.originalCamelCase}}) }</TableCell>
                {{/case}}
                {{#case "jsonb"}}
            <TableCell>{ JSON.stringify({{../tableObj.singularCamelCase}}Obj.{{this.caseVariants.originalCamelCase}}) }</TableCell>
                {{/case}}
                {{#case "references"}}
            <TableCell>{ {{../tableObj.singularCamelCase}}Obj.{{this.caseVariants.singularCamelCase}} }</TableCell>
                {{/case}}
                {{#case "references_select"}}
            <TableCell>{ {{../tableObj.singularCamelCase}}Obj.{{this.caseVariants.singularCamelCase}} }</TableCell>
                {{/case}}
                {{#case "file"}}
            <TableCell>{ {{../tableObj.singularCamelCase}}Obj.{{this.caseVariants.originalCamelCase}} }</TableCell>
                {{/case}}
                {{#default}}
            <TableCell>{ {{../tableObj.singularCamelCase}}Obj.{{this.caseVariants.originalCamelCase}} }</TableCell>
                {{/default}}
              {{/switch}}
            {{/each}}
            <TableCell className="sticky right-0 p-0 h-full bg-primary-foreground w-6 align-top">
              <DropdownMenu modal={false}>
                <DropdownMenuTrigger asChild>
                  <Button size="icon" variant="ghost">
                    <EllipsisIcon />
                  </Button>
                </DropdownMenuTrigger>
                <DropdownMenuContent>
                  <DropdownMenuItem asChild>
                    <Link href={`{{#if isAdmin}}/admin{{/if}}/{{tableObj.pluralKebabCase}}/${ {{tableObj.singularCamelCase}}Obj.id }`} className="flex text-sm items-center gap-2">
                      <EyeIcon className="flex-shrink-0 w-4 h-4" /> View
                    </Link>
                  </DropdownMenuItem>
                  <DropdownMenuItem asChild>
                    <Link href={`{{#if isAdmin}}/admin{{/if}}/{{tableObj.pluralKebabCase}}/${ {{tableObj.singularCamelCase}}Obj.id }/edit`} className="flex text-sm items-center gap-2">
                      <PencilIcon className="flex-shrink-0 w-4 h-4" /> Edit
                    </Link>
                  </DropdownMenuItem>
                  <DropdownMenuItem asChild>
                    <Link href={`{{#if isAdmin}}/admin{{/if}}/{{tableObj.pluralKebabCase}}/${ {{tableObj.singularCamelCase}}Obj.id }/delete`} className="flex text-sm items-center gap-2">
                      <TrashIcon className="flex-shrink-0 w-4 h-4" /> Delete
                    </Link>
                  </DropdownMenuItem>
                </DropdownMenuContent>
              </DropdownMenu>
            </TableCell>
          </TableRow>
        ))}
      </TableBody>
    </Table>
  );
}
