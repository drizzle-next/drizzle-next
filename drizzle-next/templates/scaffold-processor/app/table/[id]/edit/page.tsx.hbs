import { notFound } from "next/navigation";
{{#if referencesColumnList.length}}
import { db } from "@/lib/db";
{{/if}}
import { {{tableObj.singularPascalCase}}UpdateForm } from "@/components/{{authorizationLevel}}/{{tableObj.pluralKebabCase}}/{{tableObj.singularKebabCase}}-update-form";
import { get{{tableObj.singularPascalCase}}WithRelations } from "@/queries/{{tableObj.singularKebabCase}}-queries";
import { Container, ContainerTitle } from "@/components/ui/container";

type Params = Promise<{ id: {{pkStrategyJsType}} }>;

export default async function Page(props: { params: Params }) {
  const params = await props.params;
  const { id } = params;
  const {{tableObj.singularCamelCase}}Obj = await get{{tableObj.singularPascalCase}}WithRelations(id);

  if (!{{tableObj.singularCamelCase}}Obj) {
    notFound();
  }

  {{#each referencesColumnList}}
  const {{this.referenceTableVars.singularCamelCase}}List = await db.query.{{this.referenceTableVars.pluralCamelCase}}.findMany();
  {{/each}}

  return (
    <Container>
      <ContainerTitle>Editing {{tableObj.singularCapitalCase}}</ContainerTitle>
      <{{tableObj.singularPascalCase}}UpdateForm 
        {{tableObj.singularCamelCase}}={ {{tableObj.singularCamelCase}}Obj }
        {{#each referencesColumnList}}
        {{this.referenceTableVars.singularCamelCase}}List={ {{this.referenceTableVars.singularCamelCase}}List }
        {{/each}}
      />
    </Container>
  );
}
