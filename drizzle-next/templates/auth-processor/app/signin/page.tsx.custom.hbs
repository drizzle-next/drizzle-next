import { redirect } from "next/navigation";
import { signIn } from "@/lib/auth";
import { AuthError } from "next-auth";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
{{#if providers.credentials}}
import { SignInForm } from "@/components/signin/signin-form";
{{/if}}

type SearchParams = Promise<{ [key: string]: string | string[] | undefined }>

export default async function Page(props: {
  searchParams: SearchParams;
}) {
  const searchParams = await props.searchParams;

  return (
    <div className="flex min-h-screen justify-center items-center">
      <div className="flex flex-col gap-5 border p-5 m-5 rounded">
        <h1 className="font-bold mb-5">Sign In</h1>
        {{#if providers.google}}
            <form
              key={"google"}
              className="flex flex-col gap-2 items-center w-full"
              action={async () => {
                "use server";
                try {
                  await signIn("google", {
                    redirectTo: "/dashboard",
                  });
                } catch (error) {
                  if (error instanceof AuthError) {
                    return redirect(`/signin/?error=${error.type}`);
                  }
                  throw error;
                }
              }}
            >
              <Button className="w-full" type="submit">
                <span>Sign in with Google</span>
              </Button>
            </form>
        {{/if}}
        {{#if providers.github}}
            <form
              key={"github"}
              className="flex flex-col gap-2 items-center w-full"
              action={async () => {
                "use server";
                try {
                  await signIn("github", {
                    redirectTo: "/dashboard",
                  });
                } catch (error) {
                  if (error instanceof AuthError) {
                    return redirect(`/signin/?error=${error.type}`);
                  }
                  throw error;
                }
              }}
            >
              <Button className="w-full" type="submit">
                <span>Sign in with GitHub</span>
              </Button>
            </form>
        {{/if}}
        {{#if providers.credentials}}
            <SignInForm />
        {{/if}}
        {{#if providers.postmark}}
            <form
              className="flex flex-col gap-5"
              action={async (formData) => {
                "use server";
                await signIn("postmark", {
                  email: formData.get("email"),
                  redirectTo: "/dashboard",
                });
              }}
            >
              <Input type="text" name="email" placeholder="Email" />
              <Button type="submit">Sign in with Postmark</Button>
            </form>
        {{/if}}
        {{#if providers.nodemailer}}
            <form
              className="flex flex-col gap-5"
              action={async (formData) => {
                "use server";
                await signIn("nodemailer", {
                  email: formData.get("email"),
                  redirectTo: "/dashboard",
                });
              }}
            >
              <Input type="text" name="email" placeholder="Email" />
              <Button type="submit">Sign in with Nodemailer</Button>
            </form>
        {{/if}}
          {searchParams.error && (
            <p>Login failed</p>
          )}
      </div>
    </div>
  );
}
