"use server";

import { db } from "@/lib/db";
import { insert{{tableObj.singularPascalCase}}Schema, {{tableObj.pluralCamelCase}}, {{tableObj.singularPascalCase}} } from "@/schema/{{tableObj.pluralKebabCase}}";
import { redirect } from "next/navigation";
import { revalidatePath } from "next/cache";
{{#if importFileUtils}}
import { getUploadPath, uploadFile } from "@/lib/file-utils";
{{/if}}
{{#if isNotPublic}}
import { auth } from "@/lib/auth";
{{/if}}
{{#if isAdmin}}
import { hasAdminRole } from "@/lib/authorization";
{{/if}}

export interface Create{{tableObj.singularPascalCase}}State {
  errors?: {
    {{#each columns}}
    {{this}}?: string[];
    {{/each}}
  };
  message?: string;
}

export async function create{{tableObj.singularPascalCase}}(
  prevState: Create{{tableObj.singularPascalCase}}State,
  formData: FormData
): Promise<Create{{tableObj.singularPascalCase}}State> {
{{#if isNotPublic}}
  const session = await auth();

  if (!session?.user?.id) {
    throw new Error("access denied");
  }
{{/if}}

{{#if isAdmin}}
  const isAdmin = await hasAdminRole(session.user.id);

  if (!isAdmin) {
    throw new Error("unauthorized");
  }
{{/if}}

  const validatedFields = insert{{tableObj.singularPascalCase}}Schema.safeParse({
{{formDataKeyVal}}
  });

  if (!validatedFields.success) {
    return {
      errors: validatedFields.error.flatten().fieldErrors,
      message: "error",
    };
  }

  let data: Partial<{{tableObj.singularPascalCase}}> = {
    {{#each columns}}
    {{this}}: validatedFields.data.{{this}},
    {{/each}}
  };

{{#each uploadColumnNames}}

  const {{this}}File = formData.get("{{this}}") as File;

  let {{this}}UploadPath;

  if ({{this}}File.size) {
    {{this}}UploadPath = getUploadPath({
      file: {{this}}File,
      dir: "/uploads/{{../tableObj.pluralKebabCase}}/",
    });
    data.{{this}} = {{this}}UploadPath;
    uploadFile({ file: {{this}}File, uploadPath: {{this}}UploadPath });
  }
{{/each}}

  await db.insert({{tableObj.pluralCamelCase}}).values(data);

  revalidatePath("{{#if isAdmin}}/admin{{/if}}/{{tableObj.pluralKebabCase}}");
  redirect("{{#if isAdmin}}/admin{{/if}}/{{tableObj.pluralKebabCase}}");
}
