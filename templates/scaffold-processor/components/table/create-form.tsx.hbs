"use client";

import { useFormState } from "react-dom";
import { create{{tableObj.singularPascalCase}}, Create{{tableObj.singularPascalCase}}State } from "@/actions/{{authorizationLevel}}/{{tableObj.pluralKebabCase}}/create-{{tableObj.singularKebabCase}}";
import { Button } from "@/components/ui/button";
import { Label } from "@/components/ui/label";
import { Alert, AlertTitle, AlertDescription } from "@/components/ui/alert";
{{formControlsImports}}
import { cn } from "@/lib/utils";
{{#each referencesColumnList}}
import { {{this.singularPascalCase}} } from "@/schema/{{this.pluralKebabCase}}";
{{/each}}

export default function {{tableObj.singularPascalCase}}CreateForm({{#if hasReferences}}{
  {{#each referencesColumnList}}
  {{this.singularCamelCase}}List,
  {{/each}}
}: {
  {{#each referencesColumnList}}
  {{this.singularCamelCase}}List: {{this.singularPascalCase}}[];
  {{/each}}
}{{/if}}) {
  const initialState: Create{{tableObj.singularPascalCase}}State = {};
  const [state, dispatch] = useFormState(create{{tableObj.singularPascalCase}}, initialState);

  return (
    <div>
      <form action={dispatch} className="flex flex-col gap-2">
{{formControls}}
        <div>
          <Button type="submit">Submit</Button>
        </div>
        {state.message && state.status === "success" && (
          <Alert>
            <AlertTitle>Success</AlertTitle>
            <AlertDescription>{state.message}</AlertDescription>
          </Alert>
        )}
        {state.message && state.status === "error" && (
          <Alert variant="destructive">
            <AlertTitle>Error</AlertTitle>
            <AlertDescription>{state.message}</AlertDescription>
          </Alert>
        )}
        {state.message && state.status === undefined && (
          <Alert>
            <AlertDescription>{state.message}</AlertDescription>
          </Alert>
        )}  
      </form>
    </div>
  );
}
