import { users } from "@/schema/users";
import bcrypt from "bcrypt";
import { betterSqlite, sdb } from "./sdb";
import { roles, usersRoles } from "@/schema/roles";
import { eq } from "drizzle-orm";

async function main() {
  const email = process.argv[2];
  const password = process.argv[3];
  const hash = bcrypt.hashSync(password, 10);
  await sdb.insert(users).values({ email: email, password: hash });

  await sdb.insert(roles).values({ name: "admin" }).onConflictDoNothing();

  const userRecords = await sdb
    .select()
    .from(users)
    .where(eq(users.email, email));
  const roleRecords = await sdb
    .select()
    .from(roles)
    .where(eq(roles.name, "admin"));

  await sdb
    .insert(usersRoles)
    .values({ user_id: userRecords[0].id, role_id: roleRecords[0].id });

  await betterSqlite.close();
}

main();
